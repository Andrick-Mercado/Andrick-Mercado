#BlueJ class context
comment0.target=Deposit
comment0.text=\r\n\ Abstract\ Class\:\ Deposit\r\n\ Instiantiate\ deposit\ class\ and\ implm\=ements\ account,\ creates\ setters\ and\ getters\ for\ useful\ deposit\ methods\r\n\ creates\ holder\ information\ and\ holders\r\n\ based\ of\ first\ and\ second\r\n\ @\ Andrick\ Mercado\r\n\ @\ 3/20/2020\r\n\ CS\ 108\ Section\ 1\r\n
comment1.params=
comment1.target=Deposit()
comment10.params=
comment10.target=Customer\ getFirstHolder()
comment11.params=first
comment11.target=void\ setFirstHolder(Customer)
comment12.params=second
comment12.target=void\ setSecondHolder(Customer)
comment13.params=
comment13.target=Customer\ getSecondHolder()
comment14.params=money
comment14.target=boolean\ depositMoney(int)
comment14.text=\r\n\ depositMoney\r\n\ if\ deposit\ is\ greater\ then\ 0,\ proceeds\ to\ deposit\ and\ returns\ true\r\n\ else\ false\r\n\ @param\ [int\ moeney]\ money\ to\ depositedd\r\n\ @return\ boolean\r\n
comment15.params=
comment15.target=Customer\ checkCustomer()
comment15.text=\r\n\ checkCustomer\r\n\ if\ existing\ customers\ prompts\ for\ customer\ id,\ if\ its\ true\ returns\ customer\ object\ with\ information\r\n\ if\ non-existent\ asks\ for\ name\ and\ creates\ a\ new\ customer\ object\ and\ adds\ it\ tothe\ arraylsit\r\n\ \r\n\ @return\ [Customer]\r\n
comment16.params=
comment16.target=boolean\ addAccountHolder()
comment16.text=\r\n\ addAccountHolder\ \r\n\ if\ second\ holder\ is\ empty\ it\ creates\ a\ new\ holderand\ returns\ true\r\n\ if\ second\ holder\ already\ exist\ it\ returns\ false\r\n\ @return\ [boolean]\r\n
comment17.params=c
comment17.target=boolean\ updateAccount(Customer)
comment17.text=\r\n\ updateAccount\r\n\ if\ customer\ object\ empty\ returns\ false\r\n\ else\ instiantiates\ firstholder\ with\ given\ parameter\ and\ returns\ true\r\n\ @param\ [Customer\ typ\ object]\ \r\n\ @return\ [boolean]\r\n
comment18.params=c\ num
comment18.target=boolean\ updateAccount(Customer,\ int)
comment18.text=\r\n\ updateAccount\r\n\ replaces\ c\ type\ customer\ according\ to\ the\ option\ to\ the\ firstholder\ or\ secondholder\r\n\ else\ returns\ false,\ if\ option\ 1\ or\ 2\ is\ called\ then\ returns\ true\r\n\ @param\ [Customer\ type\ object]\ \r\n\ @param\ [int\ with\ a\ num\ representing\ an\ option]\r\n\ @return\ [boolean]\r\n
comment19.params=
comment19.target=Account\ deleteAccount()
comment19.text=\r\n\ deleteAccount\ \r\n\ prompts\ user\ with\ yes\ or\ no\ to\ delete\ account,\ if\ yes\ prompts\ for\ customer\ id\r\n\ if\ corrrect\ gives\ information\ about\ the\ customers\ id\ and\ promps\ user\ for\ confirmation\ of\ deletion,\ if\ the\ user\ doesnt\ want\ to\ delete\ the\ account\r\n\ prints\ out\ No\ account\ were\ deleted,\ at\ end\ returns\ null\ if\ no\ accounts\ were\ deleted\r\n\ @return\ [Account]\r\n
comment2.params=min
comment2.target=void\ setMinimumFees(int)
comment20.params=
comment20.target=void\ resetWithdrawals()
comment20.text=\r\n\ resetWithdrawals\r\n\ numWithdrawals\ is\ set\ to\ 0\r\n
comment21.params=amount
comment21.target=boolean\ withdrawMoney(int)
comment21.text=abstract\ methods\ *
comment22.params=
comment22.target=int\ calcInterest()
comment23.params=
comment23.target=boolean\ addInterest()
comment3.params=
comment3.target=int\ getMinimumFees()
comment4.params=accountiD
comment4.target=void\ setAccountID(int)
comment5.params=
comment5.target=int\ getAccountID()
comment6.params=amount
comment6.target=void\ setaccountBalance(int)
comment7.params=
comment7.target=int\ getaccountBalance()
comment8.params=withdrawals
comment8.target=void\ setWithdrawals(int)
comment9.params=
comment9.target=int\ getWithdrawals()
numComments=24
