#BlueJ class context
comment0.target=MapInterface
comment0.text=\r\n\ The\ interface\ for\ a\ basic\ Map/Dictionary\ Abstract\ Data\ Type.\ This\ structure\r\n\ associates\ keys\ and\ values.\r\n\r\n\ @param\ <K>\ The\ object\ type\ to\ use\ as\ the\ Key\r\n\ @param\ <V>\ The\ generic\ object\ type\ to\ use\ as\ Values\r\n
comment1.params=key
comment1.target=boolean\ contains(java.lang.Comparable)
comment1.text=\r\n\ Indicates\ if\ the\ map\ contains\ the\ object\ identified\ by\ the\ key\ inside.\r\n\r\n\ @param\ key\ The\ object\ to\ compare\ against\r\n\ @return\ true\ if\ the\ parameter\ object\ appears\ in\ the\ structure\r\n
comment2.params=key\ value
comment2.target=boolean\ add(java.lang.Comparable,\ java.lang.Object)
comment2.text=\r\n\ Adds\ the\ given\ key/value\ pair\ to\ the\ dictionary.\r\n\r\n\ @param\ key\r\n\ @param\ value\r\n\ @return\ false\ if\ the\ dictionary\ is\ full,\ or\ if\ the\ key\ is\ a\ duplicate.\r\n\ Returns\ true\ if\ addition\ succeeded.\r\n
comment3.params=key
comment3.target=java.lang.Object\ delete(java.lang.Comparable)
comment3.text=\r\n\ Deletes\ the\ key/value\ pair\ identified\ by\ the\ key\ parameter.\r\n\r\n\ @param\ key\r\n\ @return\ The\ previous\ value\ associated\ with\ the\ deleted\ key\ or\ null\ if\ not\r\n\ present.\r\n
comment4.params=key
comment4.target=java.lang.Object\ getValue(java.lang.Comparable)
comment4.text=\r\n\ Retreives,\ but\ does\ not\ remove,\ the\ value\ associated\ with\ the\ provided\r\n\ key.\r\n\r\n\ @param\ key\ The\ key\ to\ identify\ within\ the\ map.\r\n\ @return\ The\ value\ associated\ with\ the\ indicated\ key.\r\n
comment5.params=value
comment5.target=java.lang.Comparable\ getKey(java.lang.Object)
comment5.text=\r\n\ Returns\ a\ key\ in\ the\ map\ associated\ with\ the\ provided\ value.\r\n\r\n\ @param\ value\ The\ value\ to\ find\ within\ the\ map.\r\n\ @return\ The\ first\ key\ found\ associated\ with\ the\ indicated\ value.\r\n
comment6.params=
comment6.target=int\ size()
comment6.text=\r\n\ Indicates\ the\ count\ of\ key/value\ entries\ stored\ inside\ the\ map.\r\n\r\n\ @return\ A\ non-negative\ number\ representing\ the\ number\ of\ entries.\r\n
comment7.params=
comment7.target=boolean\ isEmpty()
comment7.text=\r\n\ Indicates\ if\ the\ dictionary\ contains\ any\ items.\r\n\r\n\ @return\ true\ if\ the\ dictionary\ is\ empty,\ false\ otherwise.\r\n
comment8.params=
comment8.target=void\ clear()
comment8.text=\r\n\ Returns\ the\ map\ to\ an\ empty\ state\ ready\ to\ accept\ new\ entries.\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\r\n\ Returns\ a\ string\ representation\ of\ this\ Map,\r\n\ containing\ the\ String\ representation\ of\ each\ element.\r\n
numComments=10
